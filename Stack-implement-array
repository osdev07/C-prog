
#include <stdio.h>
#include <stdlib.h>
struct stack {
    int capacity;
    int top;
    int *arr;
};
struct stack *create_stack(int capacity) {
    struct stack *Stack = (struct stack *)malloc(sizeof(struct stack));
    if (Stack == NULL) {
        printf("couldnot allocate memory\n");
        return NULL;
    }
    Stack->top = -1;
    Stack->capacity = capacity;
    Stack->arr = (int *)malloc(sizeof(int)*capacity);
    return Stack;
}
int isFull(struct stack *Stack) {
   
    if(Stack->top == Stack->capacity-1){
        return 1;
    }
   
    return 0;
    
}
    
int isEmpty(struct stack *Stack) {
    if(Stack->top == -1){
        return 1;
    }
    
    return 0;
    
}
int pop(struct stack *Stack) {
    if(isEmpty(Stack)) {
        printf("stack is Empty\n");
        return -1;
    }
    return (Stack->arr[Stack->top--]);
}
void push(struct stack *Stack, int data) {
    if(isFull(Stack)) {
        printf("stack is full, couldnot add %d\n", data);
        return ;
    }
    Stack->arr[++Stack->top] = data;
}
int main()
{
    struct stack *Stack = create_stack(10);
    push(Stack, 10);
    push(Stack, 20);
    push(Stack, 30);
    push(Stack, 40);
    int data = pop(Stack);
    printf(" first = %d \n", pop(Stack));
    push (Stack, 50);
    printf(" first = %d\n ", pop(Stack));
    push(Stack, 50);
    push(Stack, 60);
    push(Stack, 70);
    push(Stack, 80);
    push(Stack, 90);
    push(Stack, 100);
    push(Stack, 20);
    push(Stack, 30);
    push(Stack, 40);
    push(Stack, 40);
    return 0;
}
